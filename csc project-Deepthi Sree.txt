Lambda Code:
Give S3Full access and DynamoDBFull access while creating the function
And add the following code in the lambda function with Node.js 16 runtime


const AWS = require('aws-sdk');
const s3 = new AWS.S3();
const dynamodb = new AWS.DynamoDB();

exports.handler = async (event) => {
  try {
    // Validate input
    if (!event.body || !event.headers['Content-Type'] || !event.queryStringParameters.fileName) {
      throw new Error('Invalid request. Missing body, Content-Type header, or fileName query parameter.');
    }

    const body = event.body;
    const contentType = event.headers['Content-Type'];
    const fileName = event.queryStringParameters.fileName;

    // Upload file to S3
    const s3Params = {
      Bucket: 'hellokalyan123456789',
      Key: fileName,
      Body: body,
      ContentType: contentType,
      ACL: 'public-read'
    };

    await s3.putObject(s3Params).promise();
    console.log('Uploaded file to S3');

// Store metadata in DynamoDB
const metadataParams = {
  TableName: 'objectdata',
  Item: {
    'Key': { S: fileName },
    'ContentType': { S: contentType },
    'UploadedAt': { S: new Date().toISOString() },
    'FileSize': { N: body.length.toString() },
    'AccessControl': { S: 'public' }, // Example: Access control settings for the file
  }
};

await dynamodb.putItem(metadataParams).promise();
console.log('Stored metadata in DynamoDB');



    return {
      statusCode: 200,
      body: JSON.stringify({ message: 'File uploaded successfully' })
    };
  } catch (error) {
    console.error('Error uploading file:', error);
    return {
      statusCode: 500,
      body: JSON.stringify({ message: 'Error uploading file' })
    };
  }
};

API Gateway Post Method:
Configure this in the integration request
Input passthrough
When there are no templates defined (recommended)

This is the test body:

{
  "body": "SGVsbG8gV29ybGQ=",
  "headers": {
    "Content-Type": "text/plain"
  },
  "queryStringParameters": {
    "fileName": "hello.pdf"
  }
}



Index.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>File Upload</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.4.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <div class="container mt-5">
    <h2>File Upload</h2>
    <form id="uploadForm" action="https://ezo4uisvl3.execute-api.us-east-1.amazonaws.com/stage1" method="post" enctype="multipart/form-data">
      <div class="mb-3">
        <label for="fileInput" class="form-label">Choose File</label>
        <input type="file" class="form-control" id="fileInput" name="file">
      </div>
      <button type="submit" class="btn btn-primary">Upload</button>
    </form>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.4.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
  document.getElementById('uploadForm').addEventListener('submit', (event) => {
    event.preventDefault(); // Prevent default form submission

    const file = document.getElementById('fileInput').files[0];
    if (!file) {
      alert("Please select a file to upload");
      return;
    }

    const reader = new FileReader();
    reader.readAsDataURL(file); // Read the file content

    reader.onload = function(e) {
      const fileContent = e.target.result.split(',')[1]; // Extract base64 encoded data

      const data = {
        body: fileContent,
        headers: {
          "Content-Type": "text/plain"
        },
        queryStringParameters: {
          fileName: file.name
        }
      };

      // Send data to API Gateway using fetch or any other HTTP library
      fetch('https://ezo4uisvl3.execute-api.us-east-1.amazonaws.com/stage1', {
        method: 'POST',
        body: JSON.stringify(data)
      })
      .then(response => response.json())
      .then(responseData => {
        console.log('API Response:', responseData);
        // Handle successful upload response here (optional)
      })
      .catch(error => {
        console.error('Upload Error:', error);
        // Handle upload errors here
      });
    };
  });
  </script>
</body>
</html>